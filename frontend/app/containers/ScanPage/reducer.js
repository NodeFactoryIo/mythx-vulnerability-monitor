import { fromJS } from 'immutable';

import {
  CHANGE_STEP,
  BYTECODE_FETCH_SUCCESS,
  FETCH_COMPILERS_SUCCESS,
  SUBMIT_CONTRACT_REQUEST,
  SUBMIT_CONTRACT_ERROR,
  SUBMIT_CONTRACT_SUCCESS,
} from './constants';

// The initial state of the App
const initialState = fromJS({
  step: 0,
  bytecode: '',
  compilerVersions: [],
  isSubmitting: false,
});

export default function scanReducer(state = initialState, action) {
  switch (action.type) {
    case CHANGE_STEP:
      return state
        .set('step', action.next);
    case SUBMIT_CONTRACT_REQUEST:
      return state
        .set('isSubmitting', true);
    case SUBMIT_CONTRACT_ERROR:
      return state
        .set('isSubmitting', false);
    case SUBMIT_CONTRACT_SUCCESS:
      return state
        .set('isSubmitting', false);
    case BYTECODE_FETCH_SUCCESS:
      return state
        .set('bytecode', action.bytecode);
    case FETCH_COMPILERS_SUCCESS:
      return state
        .set('compilerVersions', action.compilerVersions);
    default:
      return state;
  }
}
