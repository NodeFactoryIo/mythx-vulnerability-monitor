import React from 'react';
import PropTypes from 'prop-types';
import { Helmet } from 'react-helmet';
import { Steps, Row, Alert } from 'antd';

import './style.scss';
import Login from '../Login/LoginForm';
import ScanForm from './ScanForm';
import LoadingIndicator from 'components/LoadingIndicator';
import SuccessMessage from './SuccessMessage';

export default class ScanPage extends React.PureComponent { // eslint-disable-line react/prefer-stateless-function
  render() {
    const { step, onSubmitForm, compilerVersions, isSubmitting, errors } = this.props;

    console.log(errors);

    return (
      <article>
        <Helmet>
          <title>Home Page</title>
          <meta name="description" content="Smart contract vulnerability scanner" />
        </Helmet>

        <Row type="flex" justify="center">
          <div className="thin-container">
            <Steps size="small" current={step}>
              <Steps.Step title="Login" />
              <Steps.Step title="Smart contract" />
              <Steps.Step title="Finished" />
            </Steps>

            <br />
            {errors && errors.map((e, i) => <Alert type="error" key={i} message={JSON.stringify(e)} />)}
            <br />

            {step === 0 ? <Login /> : null}
            {step === 1 && isSubmitting ? <LoadingIndicator /> : null}
            {step === 1 && !isSubmitting ? <ScanForm onSubmitForm={onSubmitForm} compilerVersions={compilerVersions} /> : null}
            {step === 2 ? <SuccessMessage /> : null}

          </div>
        </Row>
      </article>
    );
  }
}

ScanPage.propTypes = {
  step: PropTypes.number,
  onSubmitForm: PropTypes.func,
  compilerVersions: PropTypes.oneOfType([PropTypes.object, PropTypes.arrayOf(PropTypes.string)]),
  isSubmitting: PropTypes.bool,
  errors: PropTypes.oneOfType([PropTypes.array, PropTypes.bool]),
};
