import React from 'react';
import { connect } from 'react-redux';
import { compose } from 'redux';
import PropTypes from 'prop-types';
import {
  Form, Icon, Input, Button, Row,
} from 'antd';

import injectReducer from 'utils/injectReducer';
import injectSaga from 'utils/injectSaga';
import { requestLogin } from './actions';
import reducer from './reducer';
import saga from './saga';

class LoginForm extends React.Component {
  handleSubmit = (e) => {
    e.preventDefault();
    const { form, onSubmitForm } = this.props;

    form.validateFields((err, values) => {
      if (!err) {
        const { ethAddress, password, email } = values;
        onSubmitForm(ethAddress, password, email);
      }
    });
  };

  render() {
    const { form } = this.props;
    const { getFieldDecorator } = form;

    return (
      <Form onSubmit={this.handleSubmit} className="login-form">
        <Form.Item label="ETH address">
          {getFieldDecorator('ethAddress', {
            rules: [{ required: true, message: 'Please input your ETH address' }],
          })(
            <Input prefix={<Icon type="key" style={{ color: 'rgba(0,0,0,.25)' }} />} placeholder="0x1234..." />
          )}
        </Form.Item>

        <Form.Item label="Password">
          {getFieldDecorator('password', {
            rules: [{ required: true, message: 'Please input your password' }],
          })(
            <Input prefix={<Icon type="lock" style={{ color: 'rgba(0,0,0,.25)' }} />} type="password" placeholder="Secret" />
          )}
        </Form.Item>

        <Form.Item
          label="Email"
          extra="Let us notify you about your results"
        >
          {getFieldDecorator('email', {
            rules: [
              { type: 'email', message: 'The input is not valid email'},
              { required: true, message: 'Please input your email' }
            ],
          })(
            <Input prefix={<Icon type="mail" style={{ color: 'rgba(0,0,0,.25)' }} />} placeholder="Email" />
          )}
        </Form.Item>

        <Row type="flex" justify="center">
          <Form.Item>
            <Button type="primary" htmlType="submit" className="login-form-button">
              Log in to MythX
            </Button>
          </Form.Item>
        </Row>
      </Form>
    );
  }
}

LoginForm.propTypes = {
  form: PropTypes.object,
  onSubmitForm: PropTypes.func,
};


const formComponent = Form.create({ name: 'login' })(LoginForm);

const withConnect = connect(null, (dispatch) => ({
  onSubmitForm: (access, refresh, email) => dispatch(requestLogin(access, refresh, email))
}));

const withReducer = injectReducer({ key: 'login', reducer });
const withSaga = injectSaga({ key: 'login', saga });

export default compose(withReducer, withSaga, withConnect)(formComponent);
