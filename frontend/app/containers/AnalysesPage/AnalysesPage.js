import React from 'react';
import { connect } from 'react-redux';
import { compose } from 'redux';
import PropTypes from 'prop-types';
import {
  Collapse
} from 'antd';
import { createStructuredSelector } from 'reselect/lib/index';

import injectReducer from 'utils/injectReducer';
import injectSaga from 'utils/injectSaga';
import { fetchAnalyses } from './actions';
import reducer from './reducer';
import saga from './saga';
import { makeSelectAnalyses, makeSelectLoading } from './selectors';

class AnalysesPage extends React.Component {
  componentWillMount() {
    const { fetchAnalyses } = this.props;
    fetchAnalyses('belmacha@gmail.com');
  }

  render() {
    const { analyses } = this.props;

    console.log(analyses);

    return (
      <Collapse>
        {analyses && analyses.map((item, i) => (
          <Collapse.Panel header={`${item.address} - ${item.status}`} key={i}>
            <Collapse>
              <Collapse.Panel header="Issues">
                {item.report && item.report.map((issue, i) => (
                  <div key={i}>
                    <p key={i}><b>Description</b> {issue.description.head}</p>
                    <p key={i}><b>Possible solution</b> {issue.description.tail}</p>
                    <p key={i}><b>Lines</b> {issue.locations.map(l => `${l.sourceMap}, }`)}</p>
                  </div>
                ))}
              </Collapse.Panel>
            </Collapse>
          </Collapse.Panel>
        ))}
      </Collapse>
    );
  }
}

AnalysesPage.propTypes = {
  fetchAnalyses: PropTypes.func,
  analyses: PropTypes.oneOfType([PropTypes.array, PropTypes.object]),
};

const mapStateToProps = createStructuredSelector({
  loading: makeSelectLoading(),
  analyses: makeSelectAnalyses(),
});

const withConnect = connect(mapStateToProps, (dispatch) => ({
  fetchAnalyses: (email) => dispatch(fetchAnalyses(email))
}));

const withReducer = injectReducer({ key: 'analyses', reducer });
const withSaga = injectSaga({ key: 'analyses', saga });

export default compose(withReducer, withSaga, withConnect)(AnalysesPage);
