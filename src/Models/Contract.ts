import {
    Column,
    DataType,
    Model,
    Table,
    ForeignKey,
    PrimaryKey,
    HasMany,
    CreatedAt,
    UpdatedAt, BelongsTo
} from "sequelize-typescript";
import User from './User';
import Report from './Report';

@Table({
    timestamps: true,
    tableName: "Contracts",
})
export default class Contract extends Model<Contract> {
    @PrimaryKey
    @Column({
        type: DataType.INTEGER,
        autoIncrement: true,
    })
    public id: number;

    @Column({
        type: DataType.STRING,
    })
    public address: string;

    @Column({
        type: DataType.TEXT,
    })
    public bytecode: string;

    @Column
    public deployedBytecode: string;

    @Column
    public sourceMap: string;

    @Column
    public deployedSourceMap: string;

    @Column({
        type: DataType.ARRAY(DataType.STRING),
    })
    public sourceList: string[];

    @Column({
        type: DataType.STRING,
    })
    public name: string;

    @Column({
        type: DataType.TEXT,
    })
    public source: string;

    @ForeignKey(() => User)
    @Column
    public userId: number;

    @CreatedAt
    public createdAt: Date;

    @UpdatedAt
    public updatedAt: Date;

    @HasMany(() => Report)
    public reports: Report[];

    @BelongsTo(() => User)
    public user: User;
}
