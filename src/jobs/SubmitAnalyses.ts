import Analysis, { status } from "../Models/Analysis";
import Contract from "../Models/Contract";
import User from "../Models/User";
import ContractService from "../Services/Contract";
import Auth from "../Services/Auth";

/**
 * We monitor analyses for a new vulnerabilities on a regular period.
 */
export function findExpiredAnalyses() {
    Analysis.findAll({ where: {
        status: status.FINISHED,
        updatedAt: { [Analysis.sequelize.Op.lt] : new Date(new Date() as any - 1 * 1000) }
    }})
        .then((analyses => {
            analyses.forEach(async(analysis) => {
                const contract = await Contract.findById(analysis.contractId);
                const access = await Auth.getToken(contract.userId);
                await ContractService.submitForAnalysis(access, contract);
            });
        }))
        .catch((e) => console.error(`Error on submitting contract for analysis... , ${e.message}`));
}
