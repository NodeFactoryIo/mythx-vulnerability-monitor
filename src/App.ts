import * as bodyParser from "body-parser";
import {Express, Request, Response, Router} from "express";
import express = require("express");
import * as helmet from "helmet";
import * as morgan from "morgan";
import * as cors from "cors";
import * as path from 'path';

import api from "./Routes/Api";
import {morganLogger} from "./Services/Logger";
import start from "./jobs";

class App {

    public server: Express;

    constructor() {
        this.server = express();
        // add before route middleware's here
        this.server.use(morgan("short", { stream: morganLogger }));
        this.server.use(bodyParser());
        this.server.use(helmet());
        this.server.use(cors({ origin: true }));

        // Load frontend production build
        if (process.env.NODE_ENV === 'production') {
            const frontendDirectory = path.join(__dirname, '../frontend/build');
            this.server.use(express.static(frontendDirectory));
        }


        this.addRoutes();
        // add after route middleware's here

        // Start cronjob
        if (process.env.NODE_ENV !== 'test') {
            start();
        }
    }

    private addRoutes(): void {
        const router = Router();

        // Frontend load
        if (process.env.NODE_ENV === 'production') {
            router.get("/", (req: Request, res: Response) => {
                res.sendFile(path.join(__dirname, '../frontend/build', 'index.html'));
            });
        }

        router.get("/health", (req: Request, res: Response) => {
            return res.json({
                status: "OK",
            });
        });
        this.server.use("/api", api);
        this.server.use("/", router);
    }
}

export default new App().server;
