import * as bodyParser from "body-parser";
import { Express } from "express";
import express = require("express");
import * as helmet from "helmet";
import * as morgan from "morgan";
import * as cors from "cors";
import * as path from 'path';

import api from "./Routes/Api";
import {morganLogger} from "./Services/Logger";
import start from "./jobs";

class App {

    public server: Express;

    constructor() {
        this.server = express();
        // add before route middleware's here
        this.server.use(morgan("short", { stream: morganLogger }));
        this.server.use(bodyParser());
        this.server.use(helmet());
        this.server.use(cors({ origin: true }));

        this.addRoutes();

        // For production build we move from build directory
        const frontendPath = process.env.NODE_ENV === 'production' ? 'frontend' : 'frontend/build';
        this.server.use(express.static(frontendPath));
        this.server.get('*', (req, res) => res.sendFile(path.resolve(frontendPath, 'index.html')));

        // add after route middleware's here

        // Start cronjob
        if (process.env.NODE_ENV !== 'test') {
            start();
        }
    }

    private addRoutes(): void {
        this.server.use("/api", api);
    }
}

export default new App().server;
